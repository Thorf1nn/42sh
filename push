#!/usr/bin/env ruby

require_relative "tests/test_lib/print_in_color"
require_relative "tests/test"
PUSH_QUIET = '> temp.log 2> temp.log'

# Execute tests:
if test_42sh(false) == false
    print_in_color("| !!! Tests failed, abort push !!!\n", "red")
    exit 84
end

# Check arguments:
if ARGV.size >= 1
    msg = ARGV[0]
else
    msg = "continue/update -> functions"
end

# Print loading message:
system "make fclean && clear"
print_in_color("|-> GIT PUSH:\n", "yellow")
print_in_color("| MSG = \"", "yellow")
print_in_color("#{msg}", "purple")
print_in_color("\"\n", "yellow")
print_in_color("| loading ...\n", "yellow")

# Git add all midified files:
print_in_color("| add all modified files : ", "yellow")
system "git add * #{PUSH_QUIET}"
print_in_color("success !\n", "green")

# Git commit whit selected message:
print_in_color("| commit with the following message \"", "yellow")
print_in_color("#{msg}", "purple")
print_in_color("\" : ", "yellow")
system "git commit -m \"#{msg}\" #{PUSH_QUIET}"
print_in_color("success !\n", "green")

# Git pull if needed:
print_in_color("| check git repertory and pull if needed : ", "yellow")
system "git pull #{PUSH_QUIET}"
print_in_color("success !\n", "green")

# Git push all:
print_in_color("| push : ", "yellow")
system "git push #{PUSH_QUIET}"
print_in_color("success !\n", "green")

# Finish and remove log file if success:
print_in_color("| FINISHED !\n", "yellow")
system "rm -rf temp.log"
